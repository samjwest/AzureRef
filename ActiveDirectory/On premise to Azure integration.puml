@startuml

!include <tupadr3/common>
!define ICONURL https://raw.githubusercontent.com/Roemer/plantuml-office/master/office2014
!includeurl ICONURL/Servers/database_server.puml
!includeurl ICONURL/Servers/domain_controller.puml
!includeurl ICONURL/Databases/database.puml
!includeurl ICONURL/Servers/application_server.puml
!includeurl ICONURL/Concepts/firewall_orange.puml
!includeurl ICONURL/Concepts/application_windows.puml
!includeurl ICONURL/Concepts/application_ios.puml
!includeurl ICONURL/Concepts/application_android.puml
!includeurl ICONURL/Clouds/cloud_disaster_red.puml
!includeurl ICONURL/Concepts/website.puml
!includeurl ICONURL/Concepts/web_services.puml
!includeurl ICONURL/Users/administrator.puml
!includeurl ICONURL/Devices/device_lcd_monitor.puml
!includeurl ICONURL/Devices/cell_phone_generic.puml
!includeurl ICONURL/Devices/device_laptop.puml
!includeurl ICONURL/Security/lock_protected.puml

!includeurl https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/release/1-0/C4_Container.puml
!define AzurePuml https://raw.githubusercontent.com/RicardoNiepel/Azure-PlantUML/release/1-0/dist
!includeurl AzurePuml/AzureCommon.puml
!includeurl AzurePuml/InternetOfThings/all.puml
'!includeurl AzurePuml/Databases/AzureSqlDatabase.puml
!includeurl AzurePuml/Databases/AzureCosmosDb.puml
!includeurl AzurePuml/Compute/AzureFunction.puml
!includeurl AzurePuml/Compute/AzureVirtualMachine.puml
!includeurl AzurePuml/Analytics/AzureStreamAnalytics.puml
!includeurl AzurePuml/DevOps/AzureLabServices.puml
!includeurl AzurePuml/DevOps/AzureDevTestLabs.puml
!includeurl AzurePuml/DevOps/AzurePipelines.puml
!includeurl AzurePuml/Identity/AzureActiveDirectory.puml
!includeurl AzurePuml/Storage/AzureBlobStorage.puml
!includeurl AzurePuml/Networking/AzureLoadBalancer.puml

'left to right direction


Boundary(vnet, "Virtual Network"){
    Boundary(data_tier, "Data tier"){        
        AzureVirtualMachine(dvm01, "", "")
        AzureVirtualMachine(dvm02, "", "")
        AzureVirtualMachine(dvm03, "", "")
        OFF_LOCK_PROTECTED(lock01, "NSG") #AADDFF
        AzureLoadBalancer(load02, "", "Load Balancer")
        dvm01-[hidden]-dvm02
        dvm02-[hidden]-dvm03
        lock01-[hidden]-load02        
    }
    Rel_Back(dvm01, load02, " ")
    Rel_Neighbor(load02, dvm02, " ")
    Rel_Neighbor(load02, dvm03, " ")
    Boundary(bus_tier, "Business tier"){        
        AzureVirtualMachine(bvm01, "", "")
        AzureVirtualMachine(bvm02, "", "")
        AzureVirtualMachine(bvm03, "", "")
        OFF_LOCK_PROTECTED(lock02, "NSG") #AADDFF
        AzureLoadBalancer(load03, "", "Load Balancer")
        bvm01-[hidden]-bvm02
        bvm02-[hidden]-bvm03 
        lock02-[hidden]-load03       
    }
    Rel_Back(bvm01, load03, " ")
    Rel_Neighbor(load03, bvm02, " ")
    Rel_Neighbor(load03, bvm03, " ")  
    together {  
        Boundary(web_tier, "Web tier"){        
                  
            AzureVirtualMachine(wvm01, "", "")
            AzureVirtualMachine(wvm02, "", "")
            AzureVirtualMachine(wvm03, "", "")        
            OFF_LOCK_PROTECTED(lock03, "NSG") #AADDFF  
            wvm01-[hidden]>lock03
            wvm01-[hidden]-wvm02
            wvm02-[hidden]-wvm03        
        }
        Boundary(mgmt_sub, "Management subnet"){        
            OFF_LOCK_PROTECTED(lock04, "NSG") #AADDFF
            AzureVirtualMachine(mgvm01, "", "")
        }
        wvm03-[hidden]-lock04
        web_tier-[hidden]-mgmt_sub
        'data_tier-[hidden]-mgmt_sub
        'bus_tier-[hidden]-mgmt_sub
    }
}
'Rel_Neighbor(web_tier, load02, " ")

together {
    AzureActiveDirectory(aad, " ", "Azure Active Directory")
    Container(ip01, "Public IP", "")
    AzureLoadBalancer(load01, "", "Azure Load Balancer")
    Container(ip02, "Public IP", "")
    load01-[hidden]-ip02
}
together {
    Boundary(onprem, "On-premises network"){
        OFF_DOMAIN_CONTROLLER(ad01, "Domain\nController") #AADDFF
        OFF_DEVICE_LCD_MONITOR(mon01,"On Premis\nClient") #AADDFF
        ad01-[hidden]-mon01
    }

    OFF_CELL_PHONE_GENERIC(phone, "") #AADDFF
    OFF_DEVICE_LAPTOP(laptop, "") #AADDFF
    mon01-[hidden]-laptop
    laptop-[hidden]>phone
}
onprem-[hidden]-vnet

mon01-[hidden]>aad
Rel(ad01, aad, "AD Sync")
Rel_Neighbor(mon01, aad, "Requests from on-premises users")
Rel_Back(aad, phone, "Requests from external users")

Rel_Neighbor(aad, ip01, " ")
Rel_Neighbor(ip01, load01, " ")

Rel_Back(wvm01, load01, " ")
Rel_Neighbor(load01, wvm02, " ")
Rel_Neighbor(load01, wvm03, " ")

Rel_Neighbor(ip02, mgvm01, " ")
'Rel_Back(mgvm01, ip02, " ")

'Rel_Neighbor(bus_tier, load02, " ")

@enduml